# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: dfdf-image-controller-deployment  
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: dfdf-image-controller
#   template:
#     metadata:
#       labels:
#         app: dfdf-image-controller
#     spec:
#       containers:
#       - name: dfdf-image-controller
#         image: ghcr.io/playerberny12/vut-dip-code/dfdf-controller:main
#         imagePullPolicy: IfNotPresent
#         env:
#         - name: RabbitMQ
#           value: "rabbitmq-service"
#         - name: RabbitMQQueue
#           value: "queue_image"
#         - name: RabbitMQOutputQueue
#           value: "queue_output"
#         - name: ProcessingUnitsPorts
#           value: "50500"
#       - name: dfdf-detection-image-1
#         image: ghcr.io/playerberny12/XXX/dfdf-detection-image-1:master
#         imagePullPolicy: IfNotPresent
#         resources:
#           requests:
#             memory: "3.5G"
#             cpu: "600m"
#           limits:
#             memory: "3.5G"
#             cpu: "600m"
#         volumeMounts:
#         - name: processingdata
#           mountPath: /mnt/processingdata
#           readOnly: true
#       volumes:
#       - name: processingdata
#         persistentVolumeClaim:
#           claimName: processing-data
#           readOnly: true
# ---
# apiVersion: autoscaling/v2
# kind: HorizontalPodAutoscaler
# metadata:
#   name: dfdf-image-controller-deployment  
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: dfdf-image-controller-deployment  
#   minReplicas: 1
#   maxReplicas: 3
#   metrics:
#     - type: Object
#       object:
#         metric:
#           name: rabbitmq_metrics_image_queue_depth
#         describedObject:
#           kind: Service
#           name: rabbitmq-service
#           apiVersion: v1
#         target:
#           type: Value
#           averageValue: 2